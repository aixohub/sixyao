package com.aixohub.sixyao.tools.func;

/**
 * 章动计算
 */
public class Nutation {

    private static final double rad = Math.PI / 180.0;

    /**
     * IAU2000B章动序列
     */
    private static final double[] nuTab = {
            //l  l' F  D  Om         A        A'      A"        B      B'     B"
            0, 0, 0, 0, 1, -172064161, -174666,  33386, 92052331,  9086, 15377,
            0, 0, 2,-2, 2,  -13170906,   -1675, -13696,  5730336, -3015, -4587,
            0, 0, 2, 0, 2,   -2276413,    -234,   2796,   978459,  -485,  1374,
            0, 0, 0, 0, 2,    2074554,     207,   -698,  -897492,   470,  -291,
            0, 1, 0, 0, 0,    1475877,   -3633,  11817,    73871,  -184, -1924,
            0, 1, 2,-2, 2,    -516821,    1226,   -524,   224386,  -677,  -174,
            1, 0, 0, 0, 0,     711159,      73,   -872,    -6750,     0,   358,
            0, 0, 2, 0, 1,    -387298,    -367,    380,   200728,    18,   318,
            1, 0, 2, 0, 2,    -301461,     -36,    816,   129025,   -63,   367,
            0,-1, 2,-2, 2,     215829,    -494,    111,   -95929,   299,   132,

            0, 0, 2,-2, 1,     128227,     137,    181,   -68982,    -9,    39,
            -1, 0, 2, 0, 2,     123457,      11,     19,   -53311,    32,    -4,
            -1, 0, 0, 2, 0,     156994,      10,   -168,    -1235,     0,    82,
            1, 0, 0, 0, 1,      63110,      63,     27,   -33228,     0,    -9,
            -1, 0, 0, 0, 1,     -57976,     -63,   -189,    31429,     0,   -75,
            -1, 0, 2, 2, 2,     -59641,     -11,    149,    25543,   -11,    66,
            1, 0, 2, 0, 1,     -51613,     -42,    129,    26366,     0,    78,
            -2, 0, 2, 0, 1,      45893,      50,     31,   -24236,   -10,    20,
            0, 0, 0, 2, 0,      63384,      11,   -150,    -1220,     0,    29,
            0, 0, 2, 2, 2,     -38571,      -1,    158,    16452,   -11,    68,

            0,-2, 2,-2, 2,      32481,       0,      0,   -13870,     0,     0,
            -2, 0, 0, 2, 0,     -47722,       0,    -18,      477,     0,   -25,
            2, 0, 2, 0, 2,     -31046,      -1,    131,    13238,   -11,    59,
            1, 0, 2,-2, 2,      28593,       0,     -1,   -12338,    10,    -3,
            -1, 0, 2, 0, 1,      20441,      21,     10,   -10758,     0,    -3,
            2, 0, 0, 0, 0,      29243,       0,    -74,     -609,     0,    13,
            0, 0, 2, 0, 0,      25887,       0,    -66,     -550,     0,    11,
            0, 1, 0, 0, 1,     -14053,     -25,     79,     8551,    -2,   -45,
            -1, 0, 0, 2, 1,      15164,      10,     11,    -8001,     0,    -1,
            0, 2, 2,-2, 2,     -15794,      72,    -16,     6850,   -42,    -5,

            0, 0,-2, 2, 0,      21783,       0,     13,     -167,     0,    13,
            1, 0, 0,-2, 1,     -12873,     -10,    -37,     6953,     0,   -14,
            0,-1, 0, 0, 1,     -12654,      11,     63,     6415,     0,    26,
            -1, 0, 2, 2, 1,     -10204,       0,     25,     5222,     0,    15,
            0, 2, 0, 0, 0,      16707,     -85,    -10,      168,    -1,    10,
            1, 0, 2, 2, 2,      -7691,       0,     44,     3268,     0,    19,
            -2, 0, 2, 0, 0,     -11024,       0,    -14,      104,     0,     2,
            0, 1, 2, 0, 2,       7566,     -21,    -11,    -3250,     0,    -5,
            0, 0, 2, 2, 1,      -6637,     -11,     25,     3353,     0,    14,
            0,-1, 2, 0, 2,      -7141,      21,      8,     3070,     0,     4,

            0, 0, 0, 2, 1,      -6302,     -11,      2,     3272,     0,     4,
            1, 0, 2,-2, 1,       5800,      10,      2,    -3045,     0,    -1,
            2, 0, 2,-2, 2,       6443,       0,     -7,    -2768,     0,    -4,
            -2, 0, 0, 2, 1,      -5774,     -11,    -15,     3041,     0,    -5,
            2, 0, 2, 0, 1,      -5350,       0,     21,     2695,     0,    12,
            0,-1, 2,-2, 1,      -4752,     -11,     -3,     2719,     0,    -3,
            0, 0, 0,-2, 1,      -4940,     -11,    -21,     2720,     0,    -9,
            -1,-1, 0, 2, 0,       7350,       0,     -8,      -51,     0,     4,
            2, 0, 0,-2, 1,       4065,       0,      6,    -2206,     0,     1,
            1, 0, 0, 2, 0,       6579,       0,    -24,     -199,     0,     2,

            0, 1, 2,-2, 1,       3579,       0,      5,    -1900,     0,     1,
            1,-1, 0, 0, 0,       4725,       0,     -6,      -41,     0,     3,
            -2, 0, 2, 0, 2,      -3075,       0,     -2,     1313,     0,    -1,
            3, 0, 2, 0, 2,      -2904,       0,     15,     1233,     0,     7,
            0,-1, 0, 2, 0,       4348,       0,    -10,      -81,     0,     2,
            1,-1, 2, 0, 2,      -2878,       0,      8,     1232,     0,     4,
            0, 0, 0, 1, 0,      -4230,       0,      5,      -20,     0,    -2,
            -1,-1, 2, 2, 2,      -2819,       0,      7,     1207,     0,     3,
            -1, 0, 2, 0, 0,      -4056,       0,      5,       40,     0,    -2,
            0,-1, 2, 2, 2,      -2647,       0,     11,     1129,     0,     5,

            -2, 0, 0, 0, 1,      -2294,       0,    -10,     1266,     0,    -4,
            1, 1, 2, 0, 2,       2481,       0,     -7,    -1062,     0,    -3,
            2, 0, 0, 0, 1,       2179,       0,     -2,    -1129,     0,    -2,
            -1, 1, 0, 1, 0,       3276,       0,      1,       -9,     0,     0,
            1, 1, 0, 0, 0,      -3389,       0,      5,       35,     0,    -2,
            1, 0, 2, 0, 0,       3339,       0,    -13,     -107,     0,     1,
            -1, 0, 2,-2, 1,      -1987,       0,     -6,     1073,     0,    -2,
            1, 0, 0, 0, 2,      -1981,       0,      0,      854,     0,     0,
            -1, 0, 0, 1, 0,       4026,       0,   -353,     -553,     0,  -139,
            0, 0, 2, 1, 2,       1660,       0,     -5,     -710,     0,    -2,

            -1, 0, 2, 4, 2,      -1521,       0,      9,      647,     0,     4,
            -1, 1, 0, 1, 1,       1314,       0,      0,     -700,     0,     0,
            0,-2, 2,-2, 1,      -1283,       0,      0,      672,     0,     0,
            1, 0, 2, 2, 1,      -1331,       0,      8,      663,     0,     4,
            -2, 0, 2, 2, 2,       1383,       0,     -2,     -594,     0,    -2,
            -1, 0, 0, 0, 2,       1405,       0,      4,     -610,     0,     2,
            1, 1, 2,-2, 2,       1290,       0,      0,     -556,     0,     0
    };

    /**
     * 中精度章动计算表
     */
    private static final double[] nutB = {
            22.1824,  -33.75705, 36e-6,-1720,920,
            3.5069, 1256.66393, 11e-6,-132, 57,
            1.3375,16799.4182, -51e-6, -23, 10,
            4.3649,  -67.5141,  72e-6,  21, -9,
            0.04,   -628.302,   0,     -14,  0,
            2.36,   8328.691,   0,       7,  0,
            3.46,   1884.966,   0,      -5,  2,
            5.44,  16833.175,   0,      -4,  2,
            3.69,  25128.110,   0,      -3,  0,
            3.55,    628.362,   0,       2,  0
    };

    /**
     * 章动计算,t是J2000.0起算的儒略世纪数,zq表示只计算周期大于zq(天)的项
     * @param t
     * @param zq
     * @return
     */
    public static double[] nutation(double t, double zq) {
        double t2 = t * t, t3 = t2 * t, t4 = t3 * t;
        double l = 485868.249036 + 1717915923.2178 * t + 31.8792 * t2 + 0.051635 * t3 - 0.00024470 * t4;
        double l1 = 1287104.79305 + 129596581.0481 * t - 0.5532 * t2 - 0.000136 * t3 - 0.00001149 * t4;
        double F = 335779.526232 + 1739527262.8478 * t - 12.7512 * t2 - 0.001037 * t3 + 0.00000417 * t4;
        double D = 1072260.70369 + 1602961601.2090 * t - 6.3706 * t2 + 0.006593 * t3 - 0.00003169 * t4;
        double Om = 450160.398036 - 6962890.5431 * t + 7.4722 * t2 + 0.007702 * t3 - 0.00005939 * t4;
        double dL = 0, dE = 0;
        for (int i = 0; i < nuTab.length; i += 11) {
            double c = (nuTab[i] * l + nuTab[i + 1] * l1 + nuTab[i + 2] * F + nuTab[i + 3] * D + nuTab[i + 4] * Om) / rad;
            if (zq != 0) {
                double q = 36526 * 2 * Math.PI * rad / (1717915923.2178 * nuTab[i] + 129596581.0481 * nuTab[i + 1] + 1739527262.8478 * nuTab[i + 2] + 1602961601.2090 * nuTab[i + 3] + 6962890.5431 * nuTab[i + 4]);
                if (q < zq) continue;
            }
            dL += (nuTab[i + 5] + nuTab[i + 6] * t) * Math.sin(c) + nuTab[i + 7] * Math.cos(c);
            dE += (nuTab[i + 8] + nuTab[i + 9] * t) * Math.cos(c) + nuTab[i + 10] * Math.sin(c);
        }
        // 返回IAU2000B章动值, dL是黄经章动,dE是交角章动
        return new double[]{dL / (10000000 * rad), dE / (10000000 * rad)};
    }

    /**
     * 本函数计算赤经章动及赤纬章动
     * @param z
     * @param E
     * @param dL
     * @param dE
     * @return
     */
    public static double[] CDnutation(double[] z, double E, double dL, double dE) {
        double[] r = {z[0], z[1], z[2]};
        r[0] += (Math.cos(E) + Math.sin(E) * Math.sin(z[0]) * Math.tan(z[1])) * dL - Math.cos(z[0]) * Math.tan(z[1]) * dE; // 赤经章动
        r[1] += Math.sin(E) * Math.cos(z[0]) * dL + Math.sin(z[0]) * dE; // 赤纬章动
        r[0] = MathTools.rad2mrad(r[0]);
        return r;
    }

    /**
     *   中精度章动计算,t是世纪数
     */
    public static double[] nutation2(double t) {
        double t2 = t * t, dL = 0, dE = 0;
        for (int i = 0; i < nutB.length; i += 5) {
            double c = nutB[i] + nutB[i + 1] * t + nutB[i + 2] * t2;
            double a = (i == 0) ? -1.742 * t : 0;
            dL += (nutB[i + 3] + a) * Math.sin(c);
            dE += nutB[i + 4] * Math.cos(c);
        }
        //黄经章动,交角章动
        return new double[]{dL / 100 / rad, dE / 100 / rad};
    }

    public static double nutationLon2(double t) {
        double t2 = t * t, dL = 0;
        for (int i = 0; i < nutB.length; i += 5) {
            double a = (i == 0) ? -1.742 * t : 0;
            dL += (nutB[i + 3] + a) * Math.sin(nutB[i] + nutB[i + 1] * t + nutB[i + 2] * t2);
        }
        return dL / 100 / rad;
    }
}

